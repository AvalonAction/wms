<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gionee.wms.dao.TransferRmoDao">

    <resultMap type="TransferRemove" id="TransferRemoveMap">
        <id property="id" column="id" />
        <id property="backPlatform" column="back_platform" />
        <id property="quality" column="quality" />
        <id property="remark" column="remark" />
        <id property="createBy" column="create_by" />
        <id property="createTime" column="create_time" />
        <id property="status" column="status" />
        <id property="transferCode" column="transfer_code" />


    </resultMap>

    <resultMap type="TransferRemoveDetail" id="TransferRemoveMapDetail">
        <id property="id" column="id" />
        <id property="transferId" column="transfer_id" />
        <id property="skuCode" column="sku_code" />
        <id property="totle" column="totle" />
        <id property="remark" column="remark" />
        <id property="num" column="num"/>
        <id property="SkuName" column="sku_name" />
    </resultMap>


    <!-- 获取退货单 -->
    <select id="getTransferRemove" parameterType="map" resultType="TransferRemove">
        SELECT t.id
        ,t.back_platform as backPlatform
        ,t.quality as quality
        ,t.remark as remark
        ,t.create_by as createBy
        ,t.create_time as createTime
        ,t.status as status
        ,t.transfer_code as transferCode
        FROM wms_transfer_remove t
        WHERE rownum = 1

    </select>


    <update id="updateTransferRemove" parameterType="TransferRemove">
        update wms_transfer_remove t
        <set>
            <if test="backPlatform!=null">t.back_platform = #{backPlatform},</if>
            <if test="remark!=null">t.remark = #{remark},</if>
            <if test="createBy!=null">t.create_by = #{createBy},</if>
            <if test="createTime">t.create_time = #{createTime},</if>
            <if test="status!=null">t.status = #{status}</if>
        </set>
        where t.transfer_code = #{transferCode}
    </update>

  <!-- 分页获取退货单列表. -->
  <select id="getTransferRemoveList" parameterType="map" resultMap="TransferRemoveMap">
    SELECT *
    FROM(
    SELECT A.*, rownum r
    FROM(
     select w.*  from wms_transfer_remove w
   <where>
     <!-- <if test="skuCode != null">AND EXISTS(SELECT 1 FROM WMS_BACK_GOODS WG WHERE WG.SKU_CODE = #{skuCode})</if>-->
      <if test="orderSource != null">AND w.ORDER_SOURCE = #{orderSource}</if>
      <if test="createTimeBegin != null">AND w.create_time &gt;= #{createTimeBegin}</if>
       <if test="createTimeEnd != null">AND w.create_time &lt;= #{createTimeEnd}</if>
       <if test="transferCode != null">AND w.transfer_code = #{transferCode}</if>
       <if test="quality != null">AND w.quality = #{quality}</if>
       <if test="status != null">AND w.status = #{status}</if>
       <if test="backPlatform != null">AND w.back_platform = #{backPlatform}</if>
    </where>
      order by w.create_time desc
    ) A
    <![CDATA[
			  WHERE rownum<=#{page.endRow}
			)
	    WHERE r >= #{page.startRow}
	]]>
  </select>

  <!-- 分页获取退货单列表. -->
  <select id="getTransferTotal"  parameterType="map" resultType="int">

    select count(*)  from wms_transfer_remove w
    <where>
      <if test="skuCode != null">AND EXISTS(SELECT 1 FROM WMS_BACK_GOODS WG WHERE w.SKU_CODE = #{skuCode})</if>
      <if test="orderSource != null">AND w.ORDER_SOURCE = #{orderSource}</if>
      <if test="createTimeBegin != null">AND w.create_time &gt;= #{createTimeBegin}</if>
      <if test="createTimeEnd != null">AND w.create_time &lt;= #{createTimeEnd}</if>
    </where>

  </select>
    <insert id="addTransfer" parameterType="TransferRemove">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            select  user_seq.nextval from dual
        </selectKey>
        insert into wms_transfer_remove
        (id, back_platform, quality, remark, create_by, create_time, status, transfer_code)
        values
        (#{id},#{backPlatform},#{quality},#{remark},#{createBy},#{createTime},#{status},#{transferCode})
    </insert>


    <insert id="addTransferDetail" parameterType="TransferRemoveDetail">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            select  user_seq.nextval from dual
        </selectKey>
        insert into wms_transfer_remove_detail
        (id, transfer_id, sku_code, totle, remark,num)
        values
        (#{id}, #{transferId}, #{skuCode}, #{totle}, #{remark},#{num})
    </insert>

    <select id="getTransferRemoveDetailList" parameterType="map" resultMap="TransferRemoveMapDetail">
        select a.id,a.sku_code,a.num,a.totle,w.sku_name FROM wms_transfer_remove_detail a ,wms_sku w
        where a.sku_code=w.sku_code and a.transfer_id=#{transferCode}
    </select>


    <select id="getTransferRemoveForCascade" parameterType="map" resultType="Map">

        SELECT t.id "id"
        ,t.transfer_code AS "transferCode"
        ,listagg(ws.sku_name,',')  within GROUP (order by t.transfer_code)   as "skuName"
        ,t.back_platform AS "backPlatform"
        ,t.quality AS "quality"
        ,t.remark AS "remark"
        ,t.create_by AS "createBy"
        ,t.create_time AS "createTime"
        ,t.STATUS AS "status"
        FROM wms_transfer_remove t
        LEFT JOIN wms_transfer_remove_detail w ON t.transfer_code = w.transfer_id
        LEFT JOIN wms_sku ws ON ws.sku_code = w.sku_code
        <where>
            <!-- <if test="skuCode != null">AND EXISTS(SELECT 1 FROM WMS_BACK_GOODS WG WHERE WG.SKU_CODE = #{skuCode})</if>-->
            <if test="orderSource != null">AND t.ORDER_SOURCE = #{orderSource}</if>
            <if test="createTimeBegin != null">AND t.create_time &gt;= #{createTimeBegin}</if>
            <if test="createTimeEnd != null">AND t.create_time &lt;= #{createTimeEnd}</if>
            <if test="transferCode != null">AND t.transfer_code = #{transferCode}</if>
            <if test="quality != null">AND t.quality = #{quality}</if>
            <if test="status != null">AND t.status = #{status}</if>
            <if test="backPlatform != null">AND t.back_platform = #{backPlatform}</if>
        </where>
        group by t.transfer_code,t.id ,t.back_platform,t.quality,t.remark,t.create_by,t.create_time ,t.STATUS
        order by t.transfer_code
    </select>


</mapper>